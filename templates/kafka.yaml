apiVersion: v1
kind: Service
metadata:
  labels:
    app.kubernetes.io/name: kafka-service
  name: kafka-service
  annotations:
    service.beta.kubernetes.io/aws-load-balancer-nlb-target-type: "ip"
    service.beta.kubernetes.io/aws-load-balancer-type: external
    service.beta.kubernetes.io/aws-load-balancer-scheme: internet-facing
spec:
  ports:
   - name: kafka-port
     port: 9092
     protocol: TCP
     targetPort: 9092
   - name: kafka-port-external
     port: 9093
     protocol: TCP
     targetPort: 9092
  selector:
    app.kubernetes.io/name: kafka-service
  type: LoadBalancer
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app.kubernetes.io/name: kafka-service
  name: kafka-service
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: kafka-service
  template:
    metadata:
      labels:
        app.kubernetes.io/name: kafka-service
    spec:
      containers:
      - env:
        - name: KAFKA_BROKER_ID
          value: "1"
        - name: KAFKA_ZOOKEEPER_CONNECT
          value: zookeeper-service:2181
        - name: KAFKA_LISTENERS
          value: LISTENER_INTERNAL://kafka-service:9092,LISTENER_EXTERNAL://localhost:9093
        - name: KAFKA_ADVERTISED_LISTENERS
          value: LISTENER_INTERNAL://kafka-service:9092,LISTENER_EXTERNAL://localhost:9093
        - name: KAFKA_LISTENER_SECURITY_PROTOCOL_MAP
          value: LISTENER_INTERNAL:PLAINTEXT,LISTENER_EXTERNAL:PLAINTEXT
        - name: KAFKA_INTER_BROKER_LISTENER_NAME
          value: LISTENER_INTERNAL
        image: wurstmeister/kafka
        resources:
          requests:
            memory: "2Gi"
            cpu: "1"
          limits:
            memory: "4Gi"
            cpu: "2"
        imagePullPolicy: IfNotPresent
        name: kafka-service
        ports:
        - containerPort: 9092